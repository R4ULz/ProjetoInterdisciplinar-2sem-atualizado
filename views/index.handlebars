
<section
  class="w-full bg-[url('/images/hero.png')] bg-cover bg-bottom h-[400px] lg:h-[600px] flex items-center justify-center pl-6 md:pl-10">
  <div class="max-w-screen-2xl w-full relative">
    <div class="flex flex-col gap-7">
      <div class="text-white font-semibold flex text-3xl md:text-5xl">
        <div
          class="bg-gradient-to-b from-orange-400 to-red-600 w-2 h-10 absolute -left-4 top-2"></div>
        <h1>Saboreie a alegria em <br> Cada <spam
            class="text-orange-500">Mordida</spam>!</h1>
      </div>
      <div class="text-stone-400 ">
        <p>Venha se juntar à diversão e deixe-nos <br> surpreendê-lo com nossa
          magia <br> culinária. O sabor que te faz sorrir!</p>
      </div>
      <div class="flex flex-col">
        <div class="text-stone-400 flex items-center gap-2">
          <div
            class="bg-gradient-to-b from-orange-400 to-red-600 w-2 h-2 rounded-full "></div>
          <p>Nossos horários:</p>
        </div>
        <p class="text-stone-400 pl-4">Seg a Sex 18:00 - 23:00 <br>
          Sab e Dom 18:00 - 00:00</p>
      </div>
      <div class="flex gap-7 ">
        <a href="/"
          class="hidden md:inline-block border border-red-500 text-white px-8 py-2 rounded-tl-full rounded-tr-full rounded-bl-full">Nosso
          menu</a>
        <a href="/"
          class="border border-red-500 text-white px-8 py-2 bg-red-500 rounded-tl-full rounded-tr-full rounded-br-full rounded-bl-full md:rounded-bl-none">Pedir
          agora!</a>
      </div>
    </div>
  </div>
</section>
<section id="ofertas" class="w-full h-fit px-5 flex justify-center mt-10">
  <div class="max-w-screen-2xl w-full h-fit flex flex-col gap-5">
    <div class="flex justify-start items-center gap-1">
      <div
        class="bg-gradient-to-b from-orange-400 to-red-600 w-2 h-4 sm:h-6"></div>
      <h2 class="font-bold text-2xl sm:text-3xl capitalize">Krusty ofertas
        hoje</h2>
    </div>
    <div
      class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 xl:grid-cols-5 gap-3">
      {{#each Produto}}
      {{#dataValues}}
      <div
        class="border border-gray-200 w-full h-fit flex flex-col gap-3 p-5 bg-white rounded-lg">
        <div class="rounded-xl">
          <img src="images/{{imagem}}" alt="Teste Produto"
            class="rounded-xl">
        </div>
        <div class="flex flex-col">
          <h2 class="font-bold text-xl">{{nome}}</h2>
          <p class="text-gray-600 text-sm">{{descricao}}</p>
        </div>
        <div class="flex justify-between items-center">
          <span class="text-xl font-bold text-teal-500">R$ {{valor}},00</span>
          <button data-produtoid="{{ProdutoId}}" class="bg-orange-500 text-sm text-white px-6 py-2 rounded-full font-bold uppercase add-to-cart">adicionar</button>
        </div>
      </div>
      {{/dataValues}}
      {{/each}}
      </div>
    </div>
  </div>
</section>
<section class="w-full h-fit px-5 flex justify-center mt-10">
  <div class="max-w-screen-2xl w-full h-fit flex flex-col gap-5">
    <div class="flex justify-start items-center gap-1">
      <div
        class="bg-gradient-to-b from-orange-400 to-red-600 w-2 h-4 sm:h-6"></div>
      <h2 class="font-bold text-2xl sm:text-3xl capitalize">Explore o menu
        krusty</h2>
    </div>
    <div
      class="flex overflow-x-auto overflow-y-hidden whitespace-nowrap w-full gap-3 custom-scrollbar draggable">
      <div
        class="w-[245px] lg:w-[297px] flex-shrink-0 w-48 cursor-pointer bg-white border border-gray-200 rounded-xl px-8 py-2 flex justify-center items-center gap-3 h-fit transition-all duration-300 ease-in-out hover:border-red-500 mb-3">
        <img class="w-16" src="/images/1.svg">
        <p class="text-xl flex flex-col">
          <span class="bg-red-500 w-fit text-white px-2 rounded">
            Krusty</span>
          <span class="ml-5">Lanches</span></p>
      </div>
      <div
        class="w-[245px] lg:w-[297px] flex-shrink-0 w-48 cursor-pointer bg-white border border-gray-200 rounded-xl px-8 py-2 flex justify-center items-center gap-3 h-fit transition-all duration-300 ease-in-out hover:border-red-500 mb-3">
        <img class="w-16" src="/images/2.svg">
        <p class="text-xl flex flex-col">
          <span class="bg-red-500 w-fit text-white px-2 rounded">
            Krusty</span>
          <span class="ml-5">Bebidas</span></p>
      </div>
      <div
        class="w-[245px] lg:w-[297px] flex-shrink-0 w-48 cursor-pointer bg-white border border-gray-200 rounded-xl px-8 py-2 flex justify-center items-center gap-3 h-fit transition-all duration-300 ease-in-out hover:border-red-500 mb-3">
        <img class="w-16" src="/images/3.svg">
        <p class="text-xl flex flex-col">
          <span class="bg-red-500 w-fit text-white px-2 rounded">
            Krusty</span>
          <span class="ml-5">Fritos</span></p>
      </div>
      <div
        class="w-[245px] lg:w-[297px] flex-shrink-0 w-48 cursor-pointer bg-white border border-gray-200 rounded-xl px-8 py-2 flex justify-center items-center gap-3 h-fit transition-all duration-300 ease-in-out hover:border-red-500 mb-3">
        <img class="w-16" src="/images/4.svg">
        <p class="text-xl flex flex-col">
          <span class="bg-red-500 w-fit text-white px-2 rounded">
            Krusty</span>
          <span class="ml-5">Sobremesas</span></p>
      </div>
      <div
        class="w-[245px] lg:w-[297px] flex-shrink-0 w-48 cursor-pointer bg-white border border-gray-200 rounded-xl px-8 py-2 flex justify-center items-center gap-3 h-fit transition-all duration-300 ease-in-out hover:border-red-500 mb-3">
        <img class="w-16" src="/images/5.svg">
        <p class="text-xl flex flex-col">
          <span class="bg-red-500 w-fit text-white px-2 rounded">
            Krusty</span>
          <span class="ml-5">Combos</span></p>
      </div>
    </div>
    <div
      class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 xl:grid-cols-5 gap-3">
      {{#each Produto}}
      {{#dataValues}}
      <div
        class="border border-gray-200 w-full h-fit flex flex-col gap-3 p-5 bg-white rounded-lg">
        <div class="rounded-xl">
          <img src="images/{{imagem}}" alt="Teste Produto"
            class="rounded-xl">
        </div>
        <div class="flex flex-col">
          <h2 class="font-bold text-xl">{{nome}}</h2>
          <p class="text-gray-600 text-sm">{{descricao}}</p>
        </div>
        <div class="flex justify-between items-center">
          <span class="text-xl font-bold text-teal-500">R$ {{valor}},00</span>
          <button data-produtoid="{{ProdutoId}}" class="bg-orange-500 text-sm text-white px-6 py-2 rounded-full font-bold uppercase add-to-cart">adicionar</button>
        </div>
      </div>
      {{/dataValues}}
      {{/each}}
    </div>
  </div>
</section>
<script>
document.querySelectorAll('.add-to-cart').forEach(button => {
    button.addEventListener('click', function() {
        const produtoId = this.getAttribute('data-produtoid');
        if (!produtoId) {
            console.error("Não foi possível encontrar o ID do produto para este botão.");
            return;
        }

        const quantidade = 1; // Ajuste conforme necessário

        fetch(`/carrinho/adicionar/${produtoId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({ quantidade: quantidade })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Falha na resposta do servidor: ' + response.statusText);
            }
            return response.json();
        })
        .then(data => {
            if (data.success && data.produto) {
                console.log('Dados do produto recebidos:', data.produto);
                updateLocalStorageCart(data.produto.produtoId, quantidade, data.produto.nome, data.produto.precoUnitario, data.produto.imagem);
            } else {
                console.error('Erro ao adicionar produto ao carrinho:', data.message);
            }
        })
        .catch(error => {
            console.error('Erro ao adicionar produto ao carrinho:', error.message);
        });
    });
});

function updateLocalStorageCart(produtoId, quantidade, nome, precoUnitario, imagem) {
  
  console.log('Tentando atualizar o carrinho com:', {produtoId, quantidade, nome, precoUnitario, imagem});
  

  if (!produtoId || !nome || precoUnitario == null || imagem == null) {
    console.error('Dados faltando para adicionar ao carrinho:', {produtoId, quantidade, nome, precoUnitario, imagem});
    return;
  }

  let carrinho = JSON.parse(localStorage.getItem('carrinho')) || {};
  
  if (carrinho[produtoId]) {
    let novaQuantidade = carrinho[produtoId].quantidade + quantidade;
    if (novaQuantidade > 0) {
      carrinho[produtoId].quantidade = novaQuantidade;
    } else {
      delete carrinho[produtoId]; // Remove o produto do carrinho se a quantidade for zero ou negativa
    }
  } else if (quantidade > 0) { // Só adiciona novos produtos com quantidade positiva
    carrinho[produtoId] = { quantidade, nome, precoUnitario, imagem };
  }

  localStorage.setItem('carrinho', JSON.stringify(carrinho));
  console.log('Carrinho atualizado:', carrinho);
}


</script>
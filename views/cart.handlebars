<div class="w-full h-fit text-black px-3 py-5 flex justify-center items-center md:mt-12">
  <div class="max-w-screen-2xl w-full h-fit flex flex-col gap-5 items-center">
   <div class="grid grid-cols-1 w-full md:w-[70%] h-fit md:grid-cols-3 md:gap-10 ">
    <div class="flex flex-col gap-5 p-3 h-fit md:h-[400px] md:overflow-auto custom-scrollbar md:border border-red-500 col-span-2 md:shadow-md md:p-5 md:rounded-md">
      <div class="flex items-center gap-2 font-bold">
        <div class="bg-gradient-to-b from-orange-400 to-red-600 w-1 h-5"></div>
        <h2>Meu <span class="text-orange-500">carrinho</span></h2>
      </div>
      <div class="flex flex-col items-center gap-3 w-full" id="carrinhoContainer">
            </div>
          </div>
          <div class="flex flex-col gap-3 w-full md:w-72">
      <div class="flex flex-col gap-5 items-center justify-center p-5 rounded-md shadow-md border-gray-50 w-full h-fit"> 
        <div class="flex items-center gap-2 w-full font-bold">
          <div class="bg-gradient-to-b from-orange-400 to-red-600 w-1 h-5"></div>
                <h2>Você <span class="text-orange-500">prefere</span></h2>
        </div>
      <div class="flex justify-center items-center gap-11 ">
        <div class=" border border-red-500 w-max h-max p-3 rounded-md ">
          <img src="/images/moto.png" class="w-12" alt="">
          <p class="text-sm">Delivery</p>
        </div>
        <div class="">
          <img src="/images/retirar.png" class="w-8">
          <p class="text-sm">Retirar</p>
        </div>
      </div>
      </div>
      <div class="flex flex-col items-center justify-center p-5 rounded-md shadow-md border-gray-50 w-full h-[60%]">
        <div class="flex items-center gap-2 w-full">
          <div class="bg-gradient-to-b from-orange-400 to-red-600 w-1 h-5"></div>
          <h2 class="font-bold">Pagamento</h2>
        </div>
        <div class="flex flex-col w-full gap-1 p-3">
          <div class="flex items-center justify-between gap-10 text-[10px] text-zinc-500">
            <p>Subtotal</p>
            <p id="subtotal">{{formatCurrency subtotal}}</p>
          </div>
          <div class="flex items-center justify-between gap-10 text-[10px] text-zinc-500">
            <p>Frete</p>
            <p>00,00</p>
          </div>
          <div class="flex items-center justify-between gap-10 text-[10px] text-zinc-500">
            <p>Descontos</p>
            <p>00,00</p>
          </div>
          <div class="border border-yellow-500 w-full"></div>
          <div class="flex items-center justify-between text-[14px]">
            <p>Total a pagar:</p>
            <p>R$:50,00</p>
          </div>
        </div>
        <button id="confirmarPedido" class="px-8 py-2 bg-red-500 text-white rounded-full">Pedir agora!</button>

      </div>
    </div>
   </div>
  </div> 
</div>
<script>
document.addEventListener('DOMContentLoaded', () => {
    const carrinhoContainer = document.getElementById('carrinhoContainer');
    if (!carrinhoContainer) {
        console.error('O container do carrinho não foi encontrado na página.');
        return;
    }

    const carrinho = JSON.parse(sessionStorage.getItem('carrinho')) || {};
    Object.keys(carrinho).forEach(produtoId => {
        const produto = carrinho[produtoId];
        const produtoElement = document.createElement('div');
        produtoElement.className = 'produto_' + produtoId; // Adiciona uma classe única

        const precoUnitario = produto.precoUnitario ? produto.precoUnitario.toFixed(2) : '0';

        produtoElement.innerHTML = `
            <div class="flex items-center justify-between p-2 gap-2 w-full border border-gray-50 shadow-md rounded-md">
                <img src="/public/images/${produto.imagem}" class="w-16 h-16" alt="${produto.nome}">
                <div class="flex justify-between items-center w-full">
                    <div class="w-fit h-fit flex flex-col gap-3">
                        <p class="text-sm">${produto.nome}</p>
                        <span class="text-teal-500 text-sm">R$: ${precoUnitario}</span>
                    </div>
                    <div class="flex flex-col gap-3">
                        <button class="self-end delete" data-produto-id="${produtoId}"><i class="fa-solid fa-trash text-red-500"></i></button>
                        <div class="border border-yellow-500 rounded-full flex justify-center items-center text-sm">
                            <button data-produto-id="${produtoId}" class="md:w-8 w-5 flex items-center justify-center decrease">-</button>
                            <span class="md:w-8 w-4 border-r border-l border-yellow-500 text-teal-500 flex items-center justify-center quantity_${produtoId}">${produto.quantidade}</span>
                            <button data-produto-id="${produtoId}" class="md:w-8 w-5 flex items-center justify-center increase">+</button>
                        </div>
                    </div>
                </div>
            </div>
        `;
        carrinhoContainer.appendChild(produtoElement);
    });

    addEventListeners();
});

document.addEventListener('DOMContentLoaded', () => {
    updateSubtotal();  // Calcula o subtotal inicial quando a página carrega
});

function addEventListeners() {
    document.querySelectorAll('.increase').forEach(button => {
        button.addEventListener('click', function() {
            const produtoId = this.dataset.produtoId;
            updateQuantity(produtoId, 1);
        });
    });

    document.querySelectorAll('.decrease').forEach(button => {
        button.addEventListener('click', function() {
            const produtoId = this.dataset.produtoId;
            updateQuantity(produtoId, -1);
        });
    });

    document.querySelectorAll('.delete').forEach(button => {
        button.addEventListener('click', function() {
            const produtoId = this.dataset.produtoId;
            deleteProduct(produtoId);
        });
    });
}

function updateQuantity(produtoId, change) {
    // Busque o elemento correto usando a classe única
    const quantityDisplay = document.querySelector(`.produto_${produtoId} .quantity_${produtoId}`);
    let currentQuantity = parseInt(quantityDisplay.textContent);

    if (currentQuantity === 1 && change < 0) {
        alert("Quantidade mínima alcançada, não pode diminuir mais.");
        return;
    }

    let newQuantity = currentQuantity + change;
    newQuantity = Math.max(1, newQuantity);
    quantityDisplay.textContent = newQuantity;

    // Atualiza o sessionStorage
    const carrinho = JSON.parse(sessionStorage.getItem('carrinho')) || {};
    if (carrinho[produtoId]) {
        carrinho[produtoId].quantidade = newQuantity;
        sessionStorage.setItem('carrinho', JSON.stringify(carrinho));
        updateSubtotal();
    }
}

function deleteProduct(produtoId) {
    let carrinho = JSON.parse(sessionStorage.getItem('carrinho')) || {};
    
    if (carrinho[produtoId]) {
        delete carrinho[produtoId];  // Remove o produto do armazenamento local
        sessionStorage.setItem('carrinho', JSON.stringify(carrinho));  // Atualiza o carrinho no armazenamento local
        console.log(`Produto com ID ${produtoId} removido do carrinho.`);

        // Remove o elemento visual do produto no carrinho
        const produtoElement = document.querySelector(`.produto_${produtoId}`);
        if (produtoElement) {
            updateSubtotal();
            produtoElement.remove();  // Remove o elemento do DOM
            console.log('Elemento do produto removido da página.');
            
        } else {
            console.error('Elemento do produto não encontrado no DOM:', produtoId);
        }
    } else {
        console.error(`Produto com ID ${produtoId} não encontrado no carrinho.`);
    }
}

function updateSubtotal() {
    let carrinho = JSON.parse(sessionStorage.getItem('carrinho')) || {};
    let subtotal = 0;

    Object.keys(carrinho).forEach(produtoId => {
        let item = carrinho[produtoId];
        subtotal += item.quantidade * item.precoUnitario;
    });

    // Atualiza o DOM com o novo subtotal
    const subtotalDisplay = document.getElementById('subtotal');
    subtotalDisplay.textContent = `R$ ${subtotal.toFixed(2)}`;
}

// Chame esta função sempre que um produto for adicionado, atualizado ou removido


document.getElementById('confirmarPedido').addEventListener('click', function() {
  const carrinho = JSON.parse(localStorage.getItem('carrinho'));
  fetch('/confirmarPedido', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ carrinho: carrinho })
  })
  .then(response => response.json())
  .then(data => {
    console.log(data.message);
    if (data.success) {
      localStorage.removeItem('carrinho'); // Limpa o carrinho no localStorage
      alert('Pedido confirmado com sucesso!');
    }
  })
  .catch(error => {
    console.error('Erro:', error);
  });
});

</script>
        </div>
      </div>
    </div>